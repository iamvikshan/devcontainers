name: Release DevContainers

on:
  workflow_dispatch:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: "0 2 * * 0"
  push:
    branches: [main]

env:
  GITHUB_REGISTRY: ghcr.io
  GITLAB_REGISTRY: registry.gitlab.com
  GL_USERNAME: vikshan

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node, Bun and install dependencies
        uses: iamvikshan/.github/.github/actions/setup-node-bun@main

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
        run: bunx semantic-release

      - name: Get latest release tag
        id: get_release_tag
        run: |
          VERSION=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" | \
            jq -r '.tag_name' | sed 's/v//')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Configure registries
        uses: ./.github/actions/configure-registries
        with:
          github-pat: ${{ secrets.GH_TOKEN }}
          gitlab-token: ${{ secrets.GITLAB_TOKEN }}
          github-registry: ${{ env.GITHUB_REGISTRY }}
          gitlab-registry: ${{ env.GITLAB_REGISTRY }}
          github-username: ${{ github.actor }}
          dockerhub-username: ${{ env.GL_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build containers
        uses: ./.github/actions/build-containers
        with:
          version: ${{ env.VERSION }}
          github-registry: ${{ env.GITHUB_REGISTRY }}
          gitlab-registry: ${{ env.GITLAB_REGISTRY }}
          gitlab-project-path: ${{ env.GL_USERNAME }}/${{ github.event.repository.name }}
          dockerhub-username: ${{ env.GL_USERNAME }}

      - name: Update versions and sizes
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          # Wait a moment for images to be fully pushed to all registries
          echo "‚è≥ Waiting for images to be available across all registries..."
          sleep 30

          # Update VERSIONS.md and README files with real-time data
          bun run update-versions --version=${{ env.VERSION }} --notes="Automated release with latest base images,Security patches and updates,Documentation improvements"

          # Commit all updated files
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add VERSIONS.md README.md base/*/README.md
          git commit -m "chore: update versions and sizes for release ${{ env.VERSION }} [skip-sync]" || exit 0
          git push
